CACM-2651
cacm MAY, 1974 
AND efficient implementation. the EL1 language contains 
the treatment of data types in EL1 
wegbreit, b. 
---------------------------------------------------------------

CACM-0595
AND, at best, difficult to measure. HOW then 
greene, I. 
cacm MAY, 1962 
AND programming concepts. IT is generally 
---------------------------------------------------------------

CACM-1878
recovery of reentrant LIST structures in slip 
reentrant LIST structures are not recovered even when 
collector that recovers abandoned reentrant LIST structures 
LIST processing, slip, garbage-collection 
LIST of slip MAY BE amended to mark those lists 
---------------------------------------------------------------

CACM-1264
LIST punched output, provide a storage dump, execute 
functions: assemble sps source decks, post LIST, 
cacm MAY, 1965 
user's program, LIST card input to a program, 
---------------------------------------------------------------

CACM-2305
ca720723 jb january 30, 1978 10:46 am 
the "plankalkul" of konrad zuse: a forerunner 
1.2 4.22 5.29 
theory of programming, history of programming 
---------------------------------------------------------------

CACM-1459
the special nature of their applications, the environment 
opler, a. 
real-time languages have different requirements 
ca660313 jb march 3, 1978 11:48 am 
---------------------------------------------------------------

CACM-2177
AS 2(m+n) in case (I), or (n^2)/win case 
graph. the graph MAY BE represented either (I) AS an 
ordered LIST of edges or (ii) AS a packed adjacency 
1961 4 2177 
---------------------------------------------------------------

CACM-3142
large linked program packages (AS eft for instance). 
cacm MAY, 1979 
ca790503 dh june 5, 1979 3:21 pm 
3142 6 3142 
---------------------------------------------------------------

CACM-0497
analytical derivation, suggesting briefly, however, 
n points of subdivision of a GIVEN interval (a,b) AND 
in a recent paper, bellman showed HOW dynamic 
a discrete search. in this paper, the computational 
---------------------------------------------------------------

CACM-2513
LIST moving, LIST copying, LIST traversal, garbage collection lisp 
in the LIST. the original LIST structure is destroyed AS IT is moved. 
nodes into which the LIST is to BE moved, AND no 
for moving any lisp-type LIST. in particular, 
cacm MAY, 1973 
---------------------------------------------------------------

